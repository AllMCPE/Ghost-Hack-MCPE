// This all code

var OnlyC = false;
var FastC = false;
var NoC = false;
var DropC = false;
var FarmC = false;
var AfarmC = false;
var NukC = false;
var CritC = false;
var SpeedC = false;
var JetC = false;
var InstaC = false;
var SaddC = false;
var TrigC = false;
var ExplC = false;
var SpamC = false;
var KnockC = false;
var BuildC = false;
var IngC = false;
var GameSC = false;
var BowC = false;
var AutoC = false;
var ZoomC = false;
var InfC = false;
var CreatC = false;
var DesC = false;
var NightC = false;
var InvC = false;
var GodC = false;
var PvpC = false;
var InverC = false;
var CoorC = false;
var DerpC = false;
var WalkC = false;
var FlyC = false;
var ClimbC = false;
var JumpC = false;
var CamC = false;
var JesC = false;
var WallsC = false;
var XRayC = false;
var SeeKillC = false;
var SeeDestroyC = false;
var AntiFireC = false;
var pX = getPlayerX();
var pY = getPlayerY();
var pZ = getPlayerZ();
var keygen = Math.random()*9;
var ip = Server.getAddress();
var port = Server.getPort();
var keyactive = false;
var timekey = 220;
var CamMob = null;
var mcfont;
var autoa = false;
var fly = false;
var sdcard = android.os.Environment.getExternalStorageDirectory();
 
var File = java.io.File;
var FileReader = java.io.FileReader;
var BufferedReader = java.io.BufferedReader;
var FOS = java.io.FileOutputStream;
var String = java.lang.String;
var StringBuilder = java.lang.StringBuilder;
var MediaPlayer = android.media.MediaPlayer();
var coords = false;
var walk = false;
var checkedimj = false;
var defaultDestroyTime = [
null, 1.5, 0.6, 0.5, 2, 2, 0, -1, null, null, null, null, 0.5, 0.6, 3, 3, 3, 2, 
0.2, 0.6, 0.3, 3, 3, null, 0.8, null, 0.2, 0.7, null, null, 4, 0, 0, null, null, 
0.8, null, 0, 0, 0, 0, 3, 5, 2, 2, 2, 0, 1.5, 2, 50, 0, 0, null, 2, 2.5, null, 
3, 5, 2.5, 0, 0.6, 3.5, 3.5, 1, 3, 0.4, 0.7, 2, 1, null, null, 5, null, 3, 3, 
null, null, null, 0.1, 0.5, 0.2, 0.4, 0.6, 0, null, 2, 1, 0.4, 0.3, null, 1, 0.5, 
null, null, -1, 3, null, 1.5, null, null, 5, 0.3, 1, 0, 0, null, 2, 2, 1.5, null, 
null, 2, null, 2, null, null, null, null, null, null, null, null, null, null, null, 
null, null, 0.8, null, null, null, null, null, 2, 2, 2, null, null, 2, null, 0, 0, 
null, null, null, null, null, null, null, null, null, null, null, null, 0.8, 0.8, 
2, 2, null, null, null, null, null, null, null, null, null, null, null, 0.5, 0.1, 
5, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, 0, 3.5, 50, 5, 0.6, 0.6, 5, null, null, null, null, 0
];
 
var VERSION = "2.5.4";
var NAME = "Ghost Hack";
var AUTHORS = "KillerBLS and ZmeY2100";
var MARK = "Â©";
 
var can = 1;
var canGetHP = 1;
var HP;
var gravity= -0.07840000092983246;
var highjump = false;
var initialised = false;
var jesus = false;
var hack = false;
var seeKill = false;
var seeDestroy = false;
var nowalls = false;
var hackcount = 0;
var nofall = false;
var explosive = false;
var climbing = false;
var spawnCount = 160;
var dropbl = false;
var farm = false;
var afarm = false;
var antifire = false;
var farmA = false;
var ingite = false;
var camera = false;
var sniper = false;
var dis = 70;
var spx = 60;
var z = 120;
var falling = 0;
var next = 0;
var px,py,pz,x,y,z,vel,saver;
var cd = 0;
var cnucker = false;
var trigger = false;
var infinite = false;
var shouldRun = 1;
var Xpos = 0;
var Zpos = 0;
var crit = false;
var i = 1;
var s = 0;
var Xdiff = 0;
var Ydiff = 0;
var triggerMob;
var Zdiff = 0;
var speed = 1;
var pspeed = false;
var velX;
var velY;
var velZ;
var x;
var tspeed = 200;
var y;
var z;
var GUI;
var playerDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var playerFlySpeed = 1;
var menu;
var exitUI;
var split = " ";
var onlyday = false;
var fastregen = false;
var jetpack = false;
var kill = false;
var derp = false;
var saddle = false;
var regen = false;
var tspammer = false;
var knockback = false;
var build = false;
var pathFont=android.os.Environment.getExternalStorageDirectory().getAbsolutePath()+"/games/com.mojang";
var fontFont= "  ";

//System by MyNameIsAnti
function Base64Decode(byteArray, Path)
{
	try
	{
	var File = new java.io.File(Path);
	if(!File.exists())
		{
	File.createNewFile();
	var Stream = new java.io.FileOutputStream(File);
	Stream.write(byteArray);
	Stream.close();
	}
	mcfont = new android.graphics.Typeface.createFromFile(pathFont + "/minecraft.ttf")
	}
	catch(err)
	{
		print(err);
	}
}

Base64Decode(android.util.Base64.decode(fontFont,0),pathFont+"/minecraft.ttf");

function dip2px(dips){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}
 
function newLevel()
{
clientMessage("\n" + ChatColor.GRAY + "[GH]" + split + ChatColor.RED + NAME + " Version:" + split + VERSION);
ModPE.showTipMessage(NAME + " Release " + VERSION);
}

    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var layout = new android.widget.LinearLayout(ctx);
            layout.setOrientation(1);
 
            var menuBtn = new android.widget.Button(ctx);
            menuBtn.setText("[GH]");
			menuBtn.setTypeface(mcfont);
           menuBtn.setTextColor(android.graphics.Color.RED);
            menuBtn.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    mainMenu();
                    exit();
                }
            }));
            layout.addView(menuBtn);
             
            GUI = new android.widget.PopupWindow(layout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
            GUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
            GUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 160, 0);
        }catch(err){
            clientMessage("Error: " + err);
        }
    }}));
 
function mainMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var menuLayout = new android.widget.LinearLayout(ctx);
            var menuScroll = new android.widget.ScrollView(ctx);
            var menuLayout1 = new android.widget.LinearLayout(ctx);
            menuLayout.setOrientation(1);
            menuLayout1.setOrientation(1);
 
            menuScroll.addView(menuLayout);
            menuLayout1.addView(menuScroll);
            
			var name = new android.widget.TextView(ctx);
            name.setTextSize(23);
			name.setTypeface(mcfont);
            name.setText(NAME + split + VERSION + MARK);
           name.setTextColor(android.graphics.Color.RED);
            name.setGravity(android.view.Gravity.CENTER);
 
           menuLayout.addView(name);
		   
            var key = new android.widget.Button(ctx);
            key.setText("Key Gen");
			key.setTypeface(mcfont);
            key.setTextColor(android.graphics.Color.BLUE);
            key.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
					clientMessage(ChatColor.RED + "Key: " + ChatColor.WHITE + keygen);
                }
            }));
            menuLayout.addView(key);
			
			var hackpass = new android.widget.Button(ctx);
            hackpass.setText("Hack Password");
			hackpass.setTypeface(mcfont);
            hackpass.setTextColor(android.graphics.Color.BLUE);
            hackpass.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                if(hack==false)
                {
                hack = true;
                }
                else if(hack==true)
                {
                hack = false;
                }
                }
            }));
            menuLayout.addView(hackpass);
			
			var checked = false;
            var button = new android.widget.CheckBox(ctx);
            button.setText("Speed Mine");
			button.setTypeface(mcfont);
			button.setTextColor(android.graphics.Color.RED);
			button.setChecked(DesC);
            button.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    if(!checked){
                        checked = true;
                        button.setTextColor(android.graphics.Color.GREEN);
                        instaDestroy();
                        DesC = true;
                    }else{
                        checked = false;
                        button.setTextColor(android.graphics.Color.RED);
                        defaultDestroy();
                        DesC = false;
                    }
                    button.setChecked(DesC);
                }
            }));
            menuLayout.addView(button);
            
			var checkedgj = false;
            var buttongj = new android.widget.CheckBox(ctx);
            buttongj.setText("God Mode");
			buttongj.setTypeface(mcfont);
			buttongj.setTextColor(android.graphics.Color.RED);
			buttongj.setChecked(GodC);
            buttongj.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checkedgj){
            checkedgj = true;
            buttongj.setTextColor(android.graphics.Color.GREEN);
            Player.setHealth(30000);
            GodC = true;
            }else{
            checkedgj = false;
            buttongj.setTextColor(android.graphics.Color.RED);
            Player.setHealth(20);
            GodC = false;
            }
            buttongj.setChecked(GodC);
            }
            }));
            menuLayout.addView(buttongj);
             
            var checkedx = false;
            var button8 = new android.widget.CheckBox(ctx);
            button8.setText("Creative");
			button8.setTypeface(mcfont);
			button8.setTypeface(mcfont);
			button8.setTextColor(android.graphics.Color.RED);
			button8.setChecked(CreatC);
            button8.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    if(!checkedx){
                        checkedx = true;
                        button8.setTextColor(android.graphics.Color.GREEN);
                        Level.setGameMode(1)
                        CreatC = true;
                    }else{
                        checkedx = false;
                        button8.setTextColor(android.graphics.Color.RED);
                        Level.setGameMode(0)
                        CreatC = false;
                    }
                    button8.setChecked(CreatC);
                }
            }));
            menuLayout.addView(button8);
             
			var checkedzo = false;
            var buttonzo = new android.widget.CheckBox(ctx);
               buttonzo.setText("FOV");
			   buttonzo.setTypeface(mcfont);
			   buttonzo.setTextColor(android.graphics.Color.RED);
			   buttonzo.setChecked(ZoomC);
               buttonzo.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedzo){
                           checkedzo = true;
                           buttonzo.setTextColor(android.graphics.Color.GREEN);
                           ModPE.setFov(z.toString())
                           ZoomC = true;
                       }else{
                           checkedzo = false;
                           buttonzo.setTextColor(android.graphics.Color.RED);
                           ModPE.setFov(dis.toString())
                           ZoomC = false;
                       }
                       buttonzo.setChecked(ZoomC);
                   }
               }));
               menuLayout.addView(buttonzo);

			   var checkedfly = false;
               var buttonfly = new android.widget.CheckBox(ctx);
               buttonfly.setText("Flight/Fly");
			   buttonfly.setTypeface(mcfont);
			   buttonfly.setTextColor(android.graphics.Color.RED);
			   buttonfly.setChecked(FlyC);
               buttonfly.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedfly){
                           checkedfly = true;
                           buttonfly.setTextColor(android.graphics.Color.GREEN);
                           Player.setCanFly(true);
                           FlyC = true;
                       }else{
                           checkedfly = false;
                           buttonfly.setTextColor(android.graphics.Color.RED);
                           Player.setCanFly(false);
                           FlyC = false;
                       }
                       buttonfly.setChecked(FlyC);
                   }
               }));
               menuLayout.addView(buttonfly);
 
			   var checkedo = false;
               var buttono = new android.widget.CheckBox(ctx);
               buttono.setText("Only Day");
			   buttono.setTypeface(mcfont);
			   buttono.setTextColor(android.graphics.Color.RED);
			   buttono.setChecked(OnlyC);
               buttono.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedo){
						   checkedo = true;
                           OnlyC = true;
                           onlyday = true;
                           buttono.setTextColor(android.graphics.Color.GREEN);
                       }else{
						   checkedo = false;
                           OnlyC = false;
                           onlyday = false;
                           buttono.setTextColor(android.graphics.Color.RED);
                       }
					   buttono.setChecked(OnlyC);
                   }
               }));
               menuLayout.addView(buttono);
               
               var checkedoff = false;
               var buttonoff = new android.widget.CheckBox(ctx);
               buttonoff.setText("Fast Regeneration");
			   buttonoff.setTypeface(mcfont);
			   buttonoff.setTextColor(android.graphics.Color.RED);
			   buttonoff.setChecked(FastC);
               buttonoff.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedoff){
                           checkedoff = true;
                           buttonoff.setTextColor(android.graphics.Color.GREEN);
                           fastregen = true;
                           FastC = true;
                       }else{
                           checkedoff = false;
                           buttonoff.setTextColor(android.graphics.Color.RED);
                           fastregen = false;
                           FastC = false;
                       }
                       buttonoff.setChecked(FastC);
                   }
               }));
               menuLayout.addView(buttonoff);
 
			   var checkedi = false;
               var buttoni = new android.widget.CheckBox(ctx);
               buttoni.setText("Insta Kill");
			   buttoni.setTypeface(mcfont);
			   buttoni.setTextColor(android.graphics.Color.RED);
			   buttoni.setChecked(InstaC);
               buttoni.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedi){
                           checkedi = true;
                           buttoni.setTextColor(android.graphics.Color.GREEN);
                           kill = true;
                           InstaC = true;
                       }else{
                           checkedi = false;
                           buttoni.setTextColor(android.graphics.Color.RED);
                           kill = false;
                           InstaC = false;
                       }
                       buttoni.setChecked(InstaC);
                   }
               }));
               menuLayout.addView(buttoni);
                
               var checkedis = false;
               var buttonis = new android.widget.CheckBox(ctx);
               buttonis.setText("Saddle Up");
			   buttonis.setTypeface(mcfont);
			   buttonis.setTextColor(android.graphics.Color.RED);
			   buttonis.setChecked(SaddC);
               buttonis.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedis){
                           checkedis = true;
                           buttonis.setTextColor(android.graphics.Color.GREEN);
                           saddle = true;
                           SaddC = true;
                       }else{
                           checkedis = false;
                           buttonis.setTextColor(android.graphics.Color.RED);
                           saddle = false;
                           SaddC = false;
                       }
                       buttonis.setChecked(SaddC);
                   }
               }));
               menuLayout.addView(buttonis);

			   var checkedclm = false;
               var buttonclm = new android.widget.CheckBox(ctx);
               buttonclm.setText("Parachute");
			   buttonclm.setTypeface(mcfont);
			   buttonclm.setTextColor(android.graphics.Color.RED);
			   buttonclm.setChecked(ClimbC);
               buttonclm.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedclm){
                           checkedclm = true;
                           buttonclm.setTextColor(android.graphics.Color.GREEN);
                           climbing = true;
                           ClimbC = true;
                       }else{
                           checkedclm = false;
                           buttonclm.setTextColor(android.graphics.Color.RED);
                           climbing = false;
                           ClimbC = false;
                       }
                       buttonclm.setChecked(ClimbC);
                   }
               }));
               menuLayout.addView(buttonclm);
                
            var checkedxm = false;
            var button8m = new android.widget.CheckBox(ctx);
            button8m.setText("PVP/PVE Regeneration");
			button8m.setTypeface(mcfont);
			button8m.setTextColor(android.graphics.Color.RED);
			button8m.setChecked(PvpC);
            button8m.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    if(!checkedxm){
                        checkedxm = true;
                        button8m.setTextColor(android.graphics.Color.GREEN);
                        regen = true;
                        PvpC = true;
                    }else{
                        checkedxm = false;
                        button8m.setTextColor(android.graphics.Color.RED);
                        regen = false;
                        PvpC = false;
                    }
                    button8m.setChecked(PvpC);
                }
            }));
            menuLayout.addView(button8m);
             
            var checkedim = false;
            var buttonim = new android.widget.CheckBox(ctx);
               buttonim.setText("Knock Back");
			   buttonim.setTypeface(mcfont);
			   buttonim.setTextColor(android.graphics.Color.RED);
			   buttonim.setChecked(KnockC);
               buttonim.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedim){
                           checkedim = true;
                           buttonim.setTextColor(android.graphics.Color.GREEN);
                           knockback = true;
                           KnockC = true;
                       }else{
                           checkedim = false;
                           buttonim.setTextColor(android.graphics.Color.RED);
                           knockback = false;
                           KnockC = false;
                       }
                       buttonim.setChecked(KnockC);
                   }
               }));
               menuLayout.addView(buttonim);
               
            var checkedgjk = false;
            var buttongjk = new android.widget.CheckBox(ctx);
            buttongjk.setText("Tap Spammer");
			buttongjk.setTypeface(mcfont);
			buttongjk.setTextColor(android.graphics.Color.RED);
			buttongjk.setChecked(SpamC);
            buttongjk.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checkedgjk){
            checkedgjk = true;
            buttongjk.setTextColor(android.graphics.Color.GREEN);
            tspammer = true;
            SpamC = true;
            }else{
            checkedgjk = false;
            buttongjk.setTextColor(android.graphics.Color.RED);
            tspammer = false;
            SpamC = false;
            }
            buttongjk.setChecked(SpamC);
            }
            }));
            menuLayout.addView(buttongjk);
            
            var checked00 = false;
            var button00 = new android.widget.CheckBox(ctx);
            button00.setText("JetPack");
			button00.setTypeface(mcfont);
			button00.setTextColor(android.graphics.Color.RED); 
			button00.setChecked(JetC);
            button00.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked00){
            checked00 = true;
            button00.setTextColor(android.graphics.Color.GREEN);
            jetpack = true;
            JetC = true;
            }else{
            checked00 = false;
            button00.setTextColor(android.graphics.Color.RED);
            jetpack = false;
            JetC = false;
            }
            button00.setChecked(JetC);
            }
            }));
            menuLayout.addView(button00);
             
            var checkedgjs = false;
            var buttongjs = new android.widget.CheckBox(ctx);
            buttongjs.setText("No Fall");
			buttongjs.setTypeface(mcfont);
			buttongjs.setTextColor(android.graphics.Color.RED);
			buttongjs.setChecked(NoC);
            buttongjs.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checkedgjs){
            checkedgjs = true;
            buttongjs.setTextColor(android.graphics.Color.GREEN);
            nofall = true;
            NoC = true;
            }else{
            checkedgjs = false;
            buttongjs.setTextColor(android.graphics.Color.RED);
            nofall = false;
            NoC = false;
            }
            buttongjs.setChecked(NoC);
            }
            }));
            menuLayout.addView(buttongjs);
             
            var checkednu = false;
			var buttonnu = new android.widget.CheckBox(ctx);
			buttonnu.setText("Click Nuker");
			buttonnu.setTypeface(mcfont);
			buttonnu.setTextColor(android.graphics.Color.RED);
			buttonnu.setChecked(NukC);
			buttonnu.setOnClickListener(new android.view.View.OnClickListener({
				onClick: function(viewarg){
					if(!checkednu){
            checkednu = true;
            buttonnu.setTextColor(android.graphics.Color.GREEN);
            cnucker = true;
            NukC = true;
        }else{
            checkednu = false;
            buttonnu.setTextColor(android.graphics.Color.RED);
            cnucker = false;
            NukC = false;
        }
        buttonnu.setChecked(NukC);
    }
}));
menuLayout.addView(buttonnu);

var checkedb = false;
var buttonb = new android.widget.CheckBox(ctx);
buttonb.setText("Click Build TNT");
buttonb.setTypeface(mcfont);
buttonb.setTextColor(android.graphics.Color.RED);
buttonb.setChecked(BuildC);
buttonb.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedb){
checkedb = true;
buttonb.setTextColor(android.graphics.Color.GREEN);
build = true;
BuildC = true;
}else{
checkedb = false;
buttonb.setTextColor(android.graphics.Color.RED);
build = false;
BuildC = false;
}
buttonb.setChecked(BuildC);
}
}));
menuLayout.addView(buttonb);
 
var checkedzog = false;
var buttonzog = new android.widget.CheckBox(ctx);
buttonzog.setText("Speed Hack");
buttonzog.setTypeface(mcfont);
buttonzog.setTextColor(android.graphics.Color.RED);
buttonzog.setChecked(SpeedC);
               buttonzog.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedzog){
                           checkedzog = true;
                           buttonzog.setTextColor(android.graphics.Color.GREEN);
                           pspeed = true;
						   s = 1;
						   SpeedC = true;
                       }else{
                           checkedzog = false;
                           buttonzog.setTextColor(android.graphics.Color.RED);
                           pspeed = false;
                           s = 0;
                           SpeedC = false;
                       }
                       buttonzog.setChecked(SpeedC);
                   }
               }));
               menuLayout.addView(buttonzog);
                
            var checkedxh = false;
            var button8h = new android.widget.CheckBox(ctx);
            button8h.setText("Stack Drop");
			button8h.setTypeface(mcfont);
			button8h.setTextColor(android.graphics.Color.RED);
			button8h.setChecked(DropC);
            button8h.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    if(!checkedxh){
                        checkedxh = true;
                        button8h.setTextColor(android.graphics.Color.GREEN);
                        dropbl = true;
                        DropC = true;
                    }else{
                        checkedxh = false;
                        button8h.setTextColor(android.graphics.Color.RED);
                        dropbl = false;
                        DropC = false;
                    }
                    button8h.setChecked(DropC);
                }
            }));
            menuLayout.addView(button8h);
             
			var checkedof = false;
               var buttonof = new android.widget.CheckBox(ctx);
               buttonof.setText("Inverted Screen");
			   buttonof.setTypeface(mcfont);
			   buttonof.setTextColor(android.graphics.Color.RED);
			   buttonof.setChecked(InverC);
               buttonof.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedof){
                           checkedof = true;
                           buttonof.setTextColor(android.graphics.Color.GREEN);
                           ModPE.setFov(300.0)
                           InverC = true;
                       }else{
                           checkedof = false;
                           buttonof.setTextColor(android.graphics.Color.RED);
                           ModPE.setFov(dis.toString())
                           InverC = false;
                       }
                       buttonof.setChecked(InverC);
                   }
               }));
               menuLayout.addView(buttonof);

			   var checkedju = false;
               var buttonju = new android.widget.CheckBox(ctx);
               buttonju.setText("High Jump");
			   buttonju.setTypeface(mcfont);
			   buttonju.setTextColor(android.graphics.Color.RED);
			   buttonju.setChecked(JumpC);
               buttonju.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedju){
                           checkedju = true;
                           buttonju.setTextColor(android.graphics.Color.GREEN);
                           highjump = true;
                           JumpC = true;
                       }else{
                           checkedju = false;
                           buttonju.setTextColor(android.graphics.Color.RED);
                           highjump = false;
                           JumpC = false;
                       }
                       buttonju.setChecked(JumpC);
                   }
               }));
               menuLayout.addView(buttonju);

			   var checkedcam = false;
               var buttoncam = new android.widget.CheckBox(ctx);
               buttoncam.setText("Victim Camera");
			   buttoncam.setTypeface(mcfont);
			   buttoncam.setTextColor(android.graphics.Color.RED);
			   buttoncam.setChecked(CamC);
               buttoncam.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedcam){
                           checkedcam = true;
                           buttoncam.setTextColor(android.graphics.Color.GREEN);
                           camera = true;
                           CamC = true;
						   if(CamMob==null)
							   {
								   print("Hit Mob");
							   }
							   if(CamMob!==null)
							   {
								   ModPE.setCamera(CamMob);
							   }
                       }else{
                           checkedcam = false;
                           buttoncam.setTextColor(android.graphics.Color.RED);
                           camera = false;
                           CamC = false;
						   CamMob = null;
						   ModPE.setCamera(getPlayerEnt());
                       }
                       buttoncam.setChecked(CamC);
                   }
               }));
               menuLayout.addView(buttoncam);
                
               var checked10c = false;
            var button10c = new android.widget.CheckBox(ctx);
            button10c.setText("Auto Armor");
			button10c.setTypeface(mcfont);
			button10c.setTextColor(android.graphics.Color.RED); button10c.setChecked(AutoC);
            button10c.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked10c){
            checked10c = true;
            button10c.setTextColor(android.graphics.Color.GREEN);
            autoa = true;
            AutoC = true;
            }else{
            checked10c = false;
            button10c.setTextColor(android.graphics.Color.RED);
            autoa = false;
            AutoC = false;
            }
			button10c.setChecked(AutoC);
            }
            }));
            menuLayout.addView(button10c);
            
			var checked0 = false;
            var button0 = new android.widget.CheckBox(ctx);
            button0.setText("Brightness");
			button0.setTypeface(mcfont);
			button0.setTextColor(android.graphics.Color.RED);
			button0.setChecked(NightC);
            button0.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked0){
            checked0 = true;
            button0.setTextColor(android.graphics.Color.GREEN);
            for(var b=0;b<255;b++)
            {
            Block.setLightLevel(b, 15);
            }
            NightC = true;
            }else{
            checked0 = false;
            button0.setTextColor(android.graphics.Color.RED);
            for(var b=0;b<255;b++)
            {
            Block.setLightLevel(b, 0);
            }
            NightC = false;
            }
            button0.setChecked(NightC);
            }
            }));
            menuLayout.addView(button0);
             
            var checkedgjsl = false;
            var buttongjsl = new android.widget.CheckBox(ctx);
            buttongjsl.setText("Coordinates");
			buttongjsl.setTypeface(mcfont);
			buttongjsl.setTextColor(android.graphics.Color.RED);
			buttongjsl.setChecked(CoorC);
            buttongjsl.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checkedgjsl){
            checkedgjsl = true;
            buttongjsl.setTextColor(android.graphics.Color.GREEN);
            coords = true;
            CoorC = true;
            }else{
            checkedgjsl = false;
            buttongjsl.setTextColor(android.graphics.Color.RED);
            coords = false;
            CoorC = false;
            }
            buttongjsl.setChecked(CoorC);
            }
            }));
            menuLayout.addView(buttongjsl);
            
            var checked10 = false;
            var button10 = new android.widget.CheckBox(ctx);
            button10.setText("Invisible");
			button10.setTypeface(mcfont);
			button10.setTextColor(android.graphics.Color.RED);
			button10.setChecked(InvC);
            button10.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked10){
            checked10 = true;
            button10.setTextColor(android.graphics.Color.GREEN);
            Entity.setRenderType(getPlayerEnt(),1);
            InvC = true;
            }else{
            checked10 = false;
            button10.setTextColor(android.graphics.Color.RED);
            Entity.setRenderType(getPlayerEnt(),3);
            InvC = false;
            }
            button10.setChecked(InvC);
            }
            }));
            menuLayout.addView(button10);
             
            var checke = false;
            var butto = new android.widget.CheckBox(ctx);
            butto.setText("Criticals");
			butto.setTypeface(mcfont);
			butto.setTextColor(android.graphics.Color.RED);
            butto.setChecked(CritC);
            butto.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checke){
            checke = true;
            butto.setTextColor(android.graphics.Color.GREEN);
            crit = true;
            CritC = true;
            }else{
            checke = false;
            butto.setTextColor(android.graphics.Color.RED);
            crit = false;
            CritC = false;
            }
            butto.setChecked(CritC);
            }
            }));
            menuLayout.addView(butto);
             
            var checkedxp = false;
            var button8d = new android.widget.CheckBox(ctx);
            button8d.setText("Cow Spawn");
			button8d.setTypeface(mcfont);
            button8d.setTextColor(android.graphics.Color.RED); button8d.setChecked(FarmC);
            button8d.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    if(!checkedxp){
                        checkedxp = true;
                        button8d.setTextColor(android.graphics.Color.GREEN);
                        farmA = true;
                        clientMessage("Tap to NRC Block");
                        FarmC = true;
                    }else{
                        checkedxp = false;
                        button8d.setTextColor(android.graphics.Color.RED);
                        farmA = false;
                        farm = false;
                        spawnCount = 160;
                        FarmC = false;
                    }
                    button8d.setChecked(FarmC);
                }
            }));
            menuLayout.addView(button8d);
             
            var checked10s = false;
            var button10s = new android.widget.CheckBox(ctx);
            button10s.setText("Derp");
			button10s.setTypeface(mcfont);
			button10s.setTextColor(android.graphics.Color.RED);
			button10s.setChecked(DerpC);
            button10s.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked10s){
            checked10s = true;
            button10s.setTextColor(android.graphics.Color.GREEN);
            derp = true;
            DerpC = true;
            }else{
            checked10s = false;
            button10s.setTextColor(android.graphics.Color.RED);
            derp = false;
            DerpC = false;
            }
            button10s.setChecked(DerpC);
            }
            }));
            menuLayout.addView(button10s);
             
            var checkedimj = false;
               var buttonimj = new android.widget.CheckBox(ctx);
               buttonimj.setText("Auto Walk");
			   buttonimj.setTypeface(mcfont);
			   buttonimj.setTextColor(android.graphics.Color.RED);
			   buttonimj.setChecked(WalkC);
               buttonimj.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedimj){
                           checkedimj = true;
                           buttonimj.setTextColor(android.graphics.Color.GREEN);
                           walk = true;
                           WalkC = true;
                       }else{
                           checkedimj = false;
                           buttonimj.setTextColor(android.graphics.Color.RED);
                           walk = false;
                           WalkC = false;
                       }
                       buttonimj.setChecked(WalkC);
                   }
               }));
               menuLayout.addView(buttonimj);
                
var b8 = new android.widget.Button(ctx);
var checkedimt = false;
var buttonimt = new android.widget.CheckBox(ctx);
buttonimt.setText("Kill Aura");
buttonimt.setTypeface(mcfont);
buttonimt.setTextColor(android.graphics.Color.RED);
buttonimt.setChecked(TrigC);
buttonimt.setOnClickListener(new android.view.View.OnClickListener({
    onClick: function(viewarg){
        if(!checkedimt){
            checkedimt = true;
            buttonimt.setTextColor(android.graphics.Color.GREEN);
            trigger = true;
            TrigC = true;
        }else{
            checkedimt = false;
            buttonimt.setTextColor(android.graphics.Color.RED);
            trigger = false;
            TrigC = false;
        }
        buttonimt.setChecked(TrigC);
    }
}));
menuLayout.addView(buttonimt);

               var gspeed = false;
               var checkedip = false;
               var buttonip = new android.widget.CheckBox(ctx);
               buttonip.setText("Game Speed x3");
			   buttonip.setTypeface(mcfont);
			   buttonip.setTextColor(android.graphics.Color.RED);
			   buttonip.setChecked(GameSC);
               buttonip.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedip){
                           checkedip = true;
                           buttonip.setTextColor(android.graphics.Color.GREEN);
                           ModPE.setGameSpeed(spx.toString());
                           GameSC = true;
                           gspeed = true;
                       }else{
                           checkedip = false;
                           buttonip.setTextColor(android.graphics.Color.RED);
                           ModPE.setGameSpeed(20);
                           GameSC = false;
                           gspeed = false;
                       }
                       buttonip.setChecked(GameSC);
                   }
               }));
               menuLayout.addView(buttonip);

var checkedimo = false;
var buttonimo = new android.widget.CheckBox(ctx);
buttonimo.setText("Sniper Bow");
buttonimo.setTypeface(mcfont);
buttonimo.setTextColor(android.graphics.Color.RED);
buttonimo.setChecked(BowC);
buttonimo.setOnClickListener(new android.view.View.OnClickListener({
    onClick: function(viewarg){
        if(!checkedimo){
            checkedimo = true;
            buttonimo.setTextColor(android.graphics.Color.GREEN);
            BowC = true;
            sniper = true;
        }else{
            checkedimo = false;
            sniper = false;
            buttonimo.setTextColor(android.graphics.Color.RED);
            BowC = false;
        }
        buttonimo.setChecked(BowC);
    }
}));
menuLayout.addView(buttonimo);

            var checked0y = false;
            var button0y = new android.widget.CheckBox(ctx);
            button0y.setText("Infinite Place Items");
			button0y.setTypeface(mcfont);
			button0y.setTextColor(android.graphics.Color.RED);
			button0y.setChecked(InfC);
            button0y.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked0y){
            checked0y = true;
            button0y.setTextColor(android.graphics.Color.GREEN);
            infinite = true;
            InfC = true;
            }else{
            checked0y = false;
            button0y.setTextColor(android.graphics.Color.RED);
            infinite = false;
            InfC = false;
            }
            button0y.setChecked(InfC);
            }
            }));
            menuLayout.addView(button0y);
            
            var checked0ys = false;
            var button0ys = new android.widget.CheckBox(ctx);
            button0ys.setText("Explosive Arrows");
			button0ys.setTypeface(mcfont);
			button0ys.setTextColor(android.graphics.Color.RED);
			button0ys.setChecked(ExplC);
            button0ys.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(viewarg){
            if(!checked0ys){
            checked0ys = true;
            button0ys.setTextColor(android.graphics.Color.GREEN);
            explosive = true;
            ExplC = true;
            }else{
            checked0ys = false;
            button0ys.setTextColor(android.graphics.Color.RED);
            explosive = false;
            ExplC = false;
            }
            button0ys.setChecked(ExplC);
            }
            }));
            menuLayout.addView(button0ys);
            
			var checkedise = false;
			var buttonise = new android.widget.CheckBox(ctx);
               buttonise.setText("Ingite Mobs");
			   buttonise.setTypeface(mcfont);
			   buttonise.setTextColor(android.graphics.Color.RED);
			   buttonise.setChecked(IngC);
               buttonise.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
                       if(!checkedise){
                           checkedise = true;
                           buttonise.setTextColor(android.graphics.Color.GREEN);
                           ingite = true;
                           IngC = true;
                       }else{
                           checkedise = false;
                           buttonise.setTextColor(android.graphics.Color.RED);
                           ingite = false;
                           IngC = false;
                       }
                       buttonise.setChecked(IngC);
                   }
               }));
			   menuLayout.addView(buttonise);
               
var checkedbi = false;
var buttonbi = new android.widget.CheckBox(ctx);
buttonbi.setText("Click Farm Builder");
buttonbi.setTypeface(mcfont);
buttonbi.setTextColor(android.graphics.Color.RED);
buttonbi.setChecked(AfarmC);
buttonbi.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedbi){
checkedbi = true;
buttonbi.setTextColor(android.graphics.Color.GREEN);
afarm = true;
AfarmC = true;
}else{
checkedbi = false;
buttonbi.setTextColor(android.graphics.Color.RED);
afarm = false;
AfarmC = false;
}
buttonbi.setChecked(AfarmC);
}
}));
menuLayout.addView(buttonbi);

var checkedjes = false;
var buttonjes = new android.widget.CheckBox(ctx);
buttonjes.setText("Jesus");
buttonjes.setTypeface(mcfont);
buttonjes.setTextColor(android.graphics.Color.RED);
buttonjes.setChecked(JesC);
buttonjes.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedjes){
checkedjes = true;
buttonjes.setTextColor(android.graphics.Color.GREEN);
jesus = true;
JesC = true;
}else{
checkedjes = false;
buttonjes.setTextColor(android.graphics.Color.RED);
jesus = false;
JesC = false;
}
buttonjes.setChecked(JesC);
}
}));
menuLayout.addView(buttonjes);

var checkedwall = false;
var buttonwall = new android.widget.CheckBox(ctx);
buttonwall.setText("No Walls");
buttonwall.setTypeface(mcfont);
buttonwall.setTextColor(android.graphics.Color.RED);
buttonwall.setChecked(WallsC);
buttonwall.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedwall){
checkedwall = true;
buttonwall.setTextColor(android.graphics.Color.GREEN);
nowalls = true;
Entity.setCollisionSize(getPlayerEnt(), 0.1, 0.1);
WallsC = true;
}else{
checkedwall = false;
buttonwall.setTextColor(android.graphics.Color.RED);
nowalls = false;
Entity.setCollisionSize(getPlayerEnt(), 1, 2);
WallsC = false;
}
buttonwall.setChecked(WallsC);
}
}));
menuLayout.addView(buttonwall);

var checkedray = false;
var buttonray = new android.widget.CheckBox(ctx);
buttonray.setText("X-Ray");
buttonray.setTypeface(mcfont);
buttonray.setTextColor(android.graphics.Color.RED);
buttonray.setChecked(XRayC);
buttonray.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedray){
checkedray = true;
buttonray.setTextColor(android.graphics.Color.GREEN);
//Code
Block.defineBlock(2, "Grass Block", ["grass", 2], 2, false, 0);
Block.defineBlock(3, "Dirt", ["dirt", 0], 2, false, 0);
Block.defineBlock(1, "Stone", ["stone", 2], 2, false, 0);
Block.setDestroyTime(2, 0.1);
Block.setDestroyTime(3, 0.1);
Block.setDestroyTime(1, 0.7);
Block.setRenderLayer(2, 1);
Block.setRenderLayer(3, 1);
Block.setRenderLayer(1, 1);
Block.setLightOpacity(2, 1);
Block.setLightOpacity(3, 1);
Block.setLightOpacity(1, 1);
XRayC = true;
}else{
checkedray = false;
buttonray.setTextColor(android.graphics.Color.RED);
//Code
Block.setRenderLayer(2, 0);
Block.setRenderLayer(3, 0);
Block.setRenderLayer(1, 0);
Block.setLightOpacity(2, 15);
Block.setLightOpacity(3, 15);
Block.setLightOpacity(1, 15);
XRayC = false;
}
buttonray.setChecked(XRayC);
}
}));
menuLayout.addView(buttonray);

var checkedskl = false;
var buttonskl = new android.widget.CheckBox(ctx);
buttonskl.setText("Kill View");
buttonskl.setTypeface(mcfont);
buttonskl.setTextColor(android.graphics.Color.RED);
buttonskl.setChecked(SeeKillC);
buttonskl.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedskl){
checkedskl = true;
buttonskl.setTextColor(android.graphics.Color.GREEN);
seeKill = true;
SeeKillC = true;
}else{
checkedskl = false;
buttonskl.setTextColor(android.graphics.Color.RED);
seeKill = false;
SeeKillC = false;
}
buttonskl.setChecked(SeeKillC);
}
}));
menuLayout.addView(buttonskl);

var checkedskd = false;
var buttonskd = new android.widget.CheckBox(ctx);
buttonskd.setText("Destroy View");
buttonskd.setTypeface(mcfont);
buttonskd.setTextColor(android.graphics.Color.RED);
buttonskd.setChecked(SeeDestroyC);
buttonskd.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedskd){
checkedskd = true;
buttonskd.setTextColor(android.graphics.Color.GREEN);
seeDestroy = true;
SeeDestroyC = true;
}else{
checkedskd = false;
buttonskd.setTextColor(android.graphics.Color.RED);
seeDestroy = false;
SeeDestroyC = false;
}
buttonskd.setChecked(SeeDestroyC);
}
}));
menuLayout.addView(buttonskd);

var checkedaf = false;
var buttonaf = new android.widget.CheckBox(ctx);
buttonaf.setText("Anti Fire");
buttonaf.setTypeface(mcfont);
buttonaf.setTextColor(android.graphics.Color.RED);
buttonaf.setChecked(AntiFireC);
buttonaf.setOnClickListener(new android.view.View.OnClickListener({
onClick: function(viewarg){
if(!checkedaf){
checkedaf = true;
buttonaf.setTextColor(android.graphics.Color.GREEN);
antifire = true;
AntiFireC = true;
}else{
checkedaf = false;
buttonaf.setTextColor(android.graphics.Color.RED);
antifire = false;
AntiFireC = false;
}
buttonaf.setChecked(AntiFireC);
}
}));
menuLayout.addView(buttonaf);
               
			   var days = new android.widget.Button(ctx);
			   days.setText("Day");
			   days.setTypeface(mcfont);
			   days.setTextColor(android.graphics.Color.BLUE);
			   days.setOnClickListener(new android.view.View.OnClickListener({
				   onClick: function(viewarg){
					   Level.setTime(100);
			   }
			   }));
			   menuLayout.addView(days);

var nights = new android.widget.Button(ctx);
nights.setText("Night");
nights.setTypeface(mcfont);
nights.setTextColor(android.graphics.Color.BLUE);
nights.setOnClickListener(new android.view.View.OnClickListener({
    onClick: function(viewarg){
        Level.setTime(14000);
    }
}));
menuLayout.addView(nights);
            
               var follow = new android.widget.Button(ctx);
               follow.setText("Support");
			   follow.setTypeface(mcfont);
			   follow.setTextColor(android.graphics.Color.BLUE);
               follow.setOnClickListener(new android.view.View.OnClickListener({
                   onClick: function(viewarg){
               ctx.runOnUiThread(new java.lang.Runnable({run: function(){
            var webs = new android.webkit.WebView(ctx);
            var webset = webs.getSettings();
            webset.setJavaScriptEnabled(true);
            webs.setWebChromeClient(new android.webkit.WebChromeClient());
            webs.setWebViewClient(new android.webkit.WebViewClient());
            webs.loadUrl("http://m.vk.com/killerbls1337");
            new android.app.AlertDialog.Builder(ctx).setView(webs).show();
            }}));
                   }
               }));
               menuLayout.addView(follow);
                
            var maker = new android.widget.TextView(ctx);
            maker.setTextSize(17);
			maker.setTypeface(mcfont);
            maker.setText("Made by" + split + AUTHORS);
			maker.setTextColor(android.graphics.Color.RED);
            maker.setGravity(android.view.Gravity.CENTER);
            menuLayout.addView(maker);
             
            //Other Buttons...
 
            menu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
            menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
            menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
             
        }catch(error){
            clientMessage("Error: " + error);
        }
    }}));
}

function exit(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var xLayout = new android.widget.LinearLayout(ctx);
 
            var xButton = new android.widget.Button(ctx);
            xButton.setText("X");
            xButton.setTextColor(android.graphics.Color.RED);
            xButton.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    exitUI.dismiss();
                    menu.dismiss();
                }
            }));
            xLayout.addView(xButton);
 
            exitUI = new android.widget.PopupWindow(xLayout, dip2px(40), dip2px(40));
            exitUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
            exitUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
        }catch(exception){
            print(exception);
        }
    }}));
}

var Entities = [];
var counter = 0;

function attackHook(attacker,victim)
{
if(camera==true)
{
CamMob = victim;
ModPE.setCamera(CamMob);
}
if(ingite==true)
{
Entity.setFireTicks(victim,10);
}
if(crit==true)
{
var lookHit = Entity.getHealth(victim)-5;
setVelY(getPlayerEnt(),0.5);
Entity.setHealth(victim,lookHit);
}
if(kill==true)
{
Entity.setHealth(victim,1);
}
if(saddle==true)
{
rideAnimal(attacker,victim);
}
if(regen==true)
{
Entity.setHealth(attacker,20);
}
if(knockback==true){
        if(getYaw() < 0){
            var hit = getYaw()+90;
            for(go=0; hit<0; go++)
            {
                hit+= 360;
            }
            x = Math.cos(hit*(Math.PI/180));
            z = Math.sin(hit*(Math.PI/180));
            setVelX(victim, x*3);
            setVelY(victim, 1);
            setVelZ(victim, z*3);
        }
        else if(getYaw() > 0 && getYaw() < 360)
        {
            var hit = getYaw()+90;
            XVel = Math.cos(hit*(Math.PI/180));
            ZVel= Math.sin(hit*(Math.PI/180));
            setVelX(victim, XVel*3);
            setVelY(victim, 1);
            setVelZ(victim, ZVel*3);
        }
        else if(getYaw() >= 360)
        {
            var hit= getYaw()+90;
            for(go=0; hit>=360; go++)
            {
                hit -= 360;
            }
            XVel = Math.cos(hit*(Math.PI/180));
            ZVel = Math.sin(hit*(Math.PI/180));
            setVelX(victim, XVel*3);
            setVelY(victim, 1);
            setVelZ(victim, ZVel*3);
        }
    }
}

function procCmd(cmd)
{
if(cmd==keygen)
{
clientMessage(ChatColor.RED + "Key Active! (/stop)");
keyactive = true;
timekey = 220;
}
if(cmd=="stop" && keyactive==true)
{
clientMessage(ChatColor.BLUE + "Stopped!");
keyactive = false;
timekey = 220;
}
if(cmd=="setspawn")
{
Level.setSpawn(getPlayerX(),getPlayerY(),getPlayerZ());
}
}

function modTick()
{
	if(antifire==true && Level.getTile(getPlayerX(), getPlayerY()-1, getPlayerZ())==51)
	{
		Entity.setFireTicks(getPlayerEnt(), 0);
	}
	if(seeKill==true)
{
Entity.setHealth(Player.getPointedEntity(), 0);
}
if(seeDestroy==true)
{
if(getTile(Player.getPointedBlockX(), Player.getPointedBlockY(), Player.getPointedBlockZ())!=0)
{
Level.destroyBlock(Player.getPointedBlockX(), Player.getPointedBlockY(), Player.getPointedBlockZ(), true);
}
}
	if(jesus==true)
	{
		if(Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==8 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==9 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==10 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==11)
			{
				setVelY(getPlayerEnt(), 0);
			}
	}
if(highjump==true)
{
if(Entity.getVelY(getPlayerEnt())< -0.1)
{
setVelY(getPlayerEnt(),-0.5);
}
if(Entity.getVelY(getPlayerEnt())< 0.35&& Entity.getVelY(getPlayerEnt())> 0.2&&can==1&&canGetHP==1)
{
setVelY(getPlayerEnt(),0.6);
can = 2;
HP = Entity.getHealth(getPlayerEnt());
canGetHP = 0;
}
if(Entity.getVelY(getPlayerEnt())>gravity&&can==2)
{
Player.setHealth(HP);
canGetHP = 1;
can = 0;
}
if(Entity.getVelY(getPlayerEnt())==gravity&&can==0)
{
Player.setHealth(HP);
canGetHP = 1;
can = 1;
}
}
if(hack==true)
{
hackcount++;
Server.sendChat("/login" + split + hackcount);
clientMessage(ChatColor.GRAY + "/login" + split + hackcount);
}
if(keyactive==true)
{
timekey--;
if(timekey==200)
{
clientMessage("10");
}
if(timekey==180)
{
clientMessage("9");
}
if(timekey==160)
{
clientMessage("8");
}
if(timekey==140)
{
clientMessage("7");
}
if(timekey==120)
{
clientMessage("6");
}
if(timekey==100)
{
clientMessage(ChatColor.RED + "5");
}
if(timekey==80)
{
clientMessage(ChatColor.RED + "4");
} 
if(timekey==60)
{
clientMessage(ChatColor.RED + "3");
}
if(timekey==40)
{
clientMessage(ChatColor.RED + "2");
}
if(timekey==20)
{
clientMessage(ChatColor.RED + "1");
}
if(timekey==0)
{
keyactive = false;
var n = Player.getName(getPlayerEnt());
timekey = 220;
clientMessage(ChatColor.GREEN + "Key registed!");
clientMessage("Welcome, " + ChatColor.GREEN + n);
}
}
if(explosive==true)
{
	counter++;
	
	if(counter == 2) {
		for (i = 0; i < Entities.length; i++) {
		
			var element = Entities[i];
			var entity = element[0];
			var oldXYZ = element[1];
			var newXYZ = [Entity.getX(entity),Entity.getY(entity),Entity.getZ(entity)];
			
			if (oldXYZ[0] == newXYZ[0] && oldXYZ[1] == newXYZ[1] && oldXYZ[2] == newXYZ[2]) {
				Entities.splice(i,1);
				Entity.setHealth(entity,0);
				Level.explode(Entity.getX(entity),Entity.getY(entity),Entity.getZ(entity),5);
			} else {
				Entities[i][1] = newXYZ;
			}
		}
		counter = 0;
	}
	}
if(sniper==true)
{
if(Player.getCarriedItem()==261)
{
ModPE.setFov(20)
}
if(Player.getCarriedItem()!==261)
{
ModPE.setFov(70)
}
}
if(trigger==true)
{
var mobs = Entity.getAll();
for(var i=0; i<mobs.length; i++)
{
var x = Entity.getX(mobs[i])-getPlayerX();
var y = Entity.getY(mobs[i])-getPlayerY();
var z = Entity.getZ(mobs[i])-getPlayerZ();
if(x*x+y*y+z*z<=4*4 && mobs[i]!==getPlayerEnt())
{
Entity.setHealth(mobs[i], 0);
}
}
}
if(walk==true)
{
toDirectionalVector(playerDir, (getYaw() + 90) * DEG_TO_RAD, getPitch() * DEG_TO_RAD * -1);
setVelX(getPlayerEnt(), 0.22 * playerDir[0]);
setVelZ(getPlayerEnt(), 0.22 * playerDir[2]);
}
if(derp==true)
{
var player = Player.getEntity();
var y = Math.floor(Entity.getYaw(player));
var p = Math.floor(Entity.getPitch(player));
Entity.setRot(player, y+3, p);
}
if(farm==true){
        spawnCount--;
    }
    if(spawnCount==140){
        Level.spawnMob(X+4, Y+1, Z+4, 11);
    }
    if(spawnCount==120){
        Level.spawnMob(X+4, Y, Z-4, 11);
    }
    if(spawnCount==100){
        Level.spawnMob(X-4, Y+1, Z+4, 11);
    }
    if(spawnCount==80){
        Level.spawnMob(X-4, Y, Z-4, 11);
    }
    if(spawnCount==60){
        Level.spawnMob(X+4, Y+1, Z, 11);
    }
    if(spawnCount==40){
        Level.spawnMob(X, Y, Z+4, 11);
    }
    if(spawnCount==20){
        Level.spawnMob(X, Y+1, Z, 11);
    }
    if(spawnCount==0){
        spawnCount = 160;
    }
if(pspeed==true) {
if(s==1)
      {
        Xpos=getPlayerX();
        Zpos=getPlayerZ();
        s = s + 1;
      }
      else if(s==3)
      {
        s=1;
        Xdiff=getPlayerX()-Xpos;
        Zdiff=getPlayerZ()-Zpos;
        setVelX(getPlayerEnt(),Xdiff);
        setVelZ(getPlayerEnt(),Zdiff);
        Xdiff=0;
        Zdiff=0;
      }
  if(s!=1)
  {
  s = s + 1;
  }
}
if(onlyday==true)
{
Level.setTime(2000);
}
if(fastregen==true)
{
Player.setHealth(20);
}
    if(jetpack==true)
    {
    jetpackTick();
    }
    if(nofall==true)
{
px = Player.getX();
py = Player.getY();
pz = Player.getZ();
if(falling==0&&Entity.getVelY(getPlayerEnt())<-0.5&&cd==0)
{
falling = 1;
}
if(falling==1&&Entity.getVelY(getPlayerEnt())>=-0.5)
{
falling = 0;
}
if(falling==1&&getTile(px,py-3,pz)!=0&&cd==0)
{
saver = Level.spawnMob(px,py-1,pz,10);
vel = Entity.getVelY(getPlayerEnt());
Entity.setRenderType(saver,1);
rideAnimal(getPlayerEnt(),saver);
setVelY(saver,vel);
ModPE.showTipMessage("");
next = 1;
}
if(next==1)
{
next--;
cd = 10;
Entity.remove(saver);
setVelY(getPlayerEnt(),vel);
}
if(cd>0)
{
cd--;
}
}
if(coords==true)
{
ModPE.showTipMessage("\n\n\n\n" + "X:" + parseInt(getPlayerX()) + split + "Y:" + parseInt(getPlayerY()) + split + "Z:" + parseInt(getPlayerZ()));
}
if(climbing==true)
{
Entity.setVelY(getPlayerEnt(),-0.10);
}
if(nowalls==true)
{
Entity.setCollisionSize(getPlayerEnt(),0,0);
{
if(Level.getTile(Player.getX(),Player.getY(), Player.getZ())!=0&&Level.getTile(Player.getX(),Player.getY()-1, Player.getZ())!=0)
{
setVelY(getPlayerEnt(), 0.01);
}
}
}
}
 
function useItem(x,y,z,itemid,blockid,side)
{
if(afarm==true)
{
if(blockid==2 || 3)
{
setTile(x,y,z,60);
}
}
if(itemid<=255&&itemid!=0 && infinite==true){
        Player.addItemInventory(itemid, 1);
}
if(tspammer==true)
{
clientMessage("SPAM!! SPAM!! SPAM!! SPAM!! SPAM!! SPAM!! SPAM!! SPAM!!");
Server.sendChat("SPAM!! SPAM!! SPAM!! SPAM!! SPAM!! SPAM!! SPAM!! SPAM!!");
}
if(build==true) {
setTile(x,y,z,46);
setTile(x,y-1,z,46);
setTile(x,y+1,z,46);
setTile(x+1,y,z,46);
setTile(x-1,y,z,46);
setTile(x,y,z+1,46);
setTile(x,y,z-1,46);
}
if(cnucker==true) {
Level.setTile(x,y,z,0);
Level.setTile(x,y-1,z,0);
Level.setTile(x,y+1,z,0);
Level.setTile(x+1,y,z,0);
Level.setTile(x-1,y,z,0);
Level.setTile(x,y,z+1,0);
Level.setTile(x,y,z-1,0);
}
if(autoa==true)
               {
               if (itemid==310&& Player.getArmorSlot(0)==0){
                    Player.setArmorSlot(0, 310);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==311&& Player.getArmorSlot(1) == 0){
                    Player.setArmorSlot(1, 311);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==312&& Player.getArmorSlot(2) == 0){
                    Player.setArmorSlot(2, 312);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==313&& Player.getArmorSlot(3) == 0){
                    Player.setArmorSlot(3, 313);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==306&& Player.getArmorSlot(0) == 0){
                    Player.setArmorSlot(0, 306);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==307&& Player.getArmorSlot(1) == 0){
                    Player.setArmorSlot(1, 307);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==308&& Player.getArmorSlot(2) == 0){
                    Player.setArmorSlot(2, 308);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==309&& Player.getArmorSlot(3) == 0){
                    Player.setArmorSlot(3, 309);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
              if (itemid==302&& Player.getArmorSlot(0) == 0){
                    Player.setArmorSlot(0, 302);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==303&&Player.getArmorSlot(1)==0){
                    Player.setArmorSlot(1, 303);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==304&&Player.getArmorSlot(2)==0){
                    Player.setArmorSlot(2, 304);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==305&&Player.getArmorSlot(3)==0){
                    Player.setArmorSlot(3, 305);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==314&&Player.getArmorSlot(0) == 0){
                    Player.setArmorSlot(0, 314);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==315&&Player.getArmorSlot(1) == 0){
                    Player.setArmorSlot(1, 315);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==316&&Player.getArmorSlot(2) == 0){
                    Player.setArmorSlot(2, 316);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==317&&Player.getArmorSlot(3) == 0){
                    Player.setArmorSlot(3, 317);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==298&&Player.getArmorSlot(0)==0){
                    Player.setArmorSlot(0, 298);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==299&&Player.getArmorSlot(1)==0){
                    Player.setArmorSlot(1, 299);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==300&&Player.getArmorSlot(2) == 0){
                    Player.setArmorSlot(2, 300);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
}
               if (itemid==301&&Player.getArmorSlot(3) == 0){
                    Player.setArmorSlot(3, 301);
                    Entity.setCarriedItem(getPlayerEnt(), 0);
     }
}
if(blockid==247 && farmA==true){
        preventDefault();
        setTile(x,y,z,52);
        farm = true;
        X = x;
        Y = y;
        Z = z;
        farmActive = true;
        clientMessage("Active");
    }
    if(blockid==52 && farmA==true && farm==true){
        farm = false;
        setTile(x,y,z,247);
        clientMessage("Deactive");
        spawnCount = 160;
        preventDefault();
    }
}

function entityAddedHook(entity) {
if(explosive==true)
{
	if(Entity.getEntityTypeId(entity) == 80) {
		var oldXYZ = [Entity.getX(entity),Entity.getY(entity),Entity.getZ(entity)];
		Entities.push([entity,oldXYZ]);
	}
}
}
 
function jetpackTick() {
    toDirectionalVector(playerDir, (getYaw() + 90) * DEG_TO_RAD, getPitch() * DEG_TO_RAD * -1);
    var player = getPlayerEnt();
    setVelX(player, playerFlySpeed * playerDir[0]);
    setVelY(player, playerFlySpeed * playerDir[1]);
    setVelZ(player, playerFlySpeed * playerDir[2]);
}
 
function toDirectionalVector(vector, yaw, pitch) {
    vector[0] = Math.cos(yaw) * Math.cos(pitch);
    vector[1] = Math.sin(pitch);
    vector[2] = Math.sin(yaw) * Math.cos(pitch);
}
 
function destroyBlock(x,y,z,side){
    var data = Level.getData(x,y,z);
    var tile = Level.getTile(x,y,z);
    if(dropbl==true){
        if(tile==1 && getCarriedItem()==270 || tile==1 && getCarriedItem()==257 || tile==1 && getCarriedItem()==274 || tile==1 && getCarriedItem()==278 || tile==1 && getCarriedItem()==285 || tile==4 && getCarriedItem()==270 || tile==4 && getCarriedItem()==257 || tile==4 && getCarriedItem()==274 || tile==4 && getCarriedItem()==278 || tile==4 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,4,63);
        }
        else if(tile==1 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285 || tile==4 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,4,64);
        }
        if(tile==2 || tile==3){
            Level.dropItem(x,y,z,0.5,3,63);
        }
        if(tile==5 || tile==6 || tile==12 || tile==13){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        if(tile==14 && getCarriedItem()==257 || tile==14 && getCarriedItem()==278 || tile==14 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,14,63);
        }
        else if(tile==14 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,14,64);
        }
        if(tile==15 && getCarriedItem()==257 || tile==15 && getCarriedItem()==274 || tile==15 && getCarriedItem()==278 || tile==15 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,15,63);
        }
        else if(tile==15 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,15,64);
        }
        if(tile==16 && getCarriedItem()==270 || tile==16 && getCarriedItem()==257 || tile==16 && getCarriedItem()==274 || tile==16 && getCarriedItem()==278 || tile==16 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,263,63);
        }
        else if(tile==16 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,263,64);
        }
        if(tile==17){
            Level.dropItem(x,y,z,0.5,17,63,data);
        }
        if(tile==18 && getCarriedItem()==359){
            Level.dropItem(x,y,z,0.5,18,63);
        }
        else if(tile==18 && getCarriedItem()!=359){
            Level.dropItem(x,y,z,0.5,18,64);
        }
        if(tile==19 || tile==20){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        if(tile==21 && getCarriedItem()==257 || tile==21 && getCarriedItem()==274 || tile==21 && getCarriedItem()==278 || tile==21 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,21,63);
        }
        else if(tile==21 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,21,64);
        }
        if(tile==22 && getCarriedItem()==257 || tile==22 && getCarriedItem()==274 || tile==22 && getCarriedItem()==278 || tile==22 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,22,63);
        }
        else if(tile==22 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,22,64);
        }
        if(tile==24 && getCarriedItem()==270 || tile==24 && getCarriedItem()==257 || tile==24 && getCarriedItem()==274 || tile==24 && getCarriedItem()==278 || tile==24 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,24,63);
        }
        else if(tile==24 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,24,64);
        }
        if(tile==26){
            Level.dropItem(x,y,z,0.5,26,63,data);
        }
        if(tile==27 && getCarriedItem()==270 || tile==27 && getCarriedItem()==257 || tile==27 && getCarriedItem()==274 || tile==27 && getCarriedItem()==278 || tile==27 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,27,63);
        }
        else if(tile==27 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,27,64);
        }
        if(tile==30 && getCarriedItem()==359){
            Level.dropItem(x,y,z,0.5,287,63);
        }
        else if(tile==30 && getCarriedItem()!=359){
            Level.dropItem(x,y,z,0.5,287,64);
        }
        if(tile==31 && getCarriedItem()==359 || tile==32 & getCarriedItem()==359){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        else if(tile==31 && getCarriedItem()!=359 || tile==32 && getCarriedItem()!=359){
            Level.dropItem(x,y,z,0.5,tile,64,data);
        }
        if(tile==37 || tile==38 || tile==39 || tile==40){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==41 && getCarriedItem()==257 || tile==41 && getCarriedItem()==278 || tile==41 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,41,63);
        }
        else if(tile==41 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,41,64);
        }
        if(tile==42 && getCarriedItem()==257 || tile==42 && getCarriedItem()==274 || tile==42 && getCarriedItem()==278 || tile==42 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,42,63);
        }
        else if(tile==42 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,42,64);
        }
        if(tile==44 && getCarriedItem()==257 || tile==44 && getCarriedItem()==270 || tile==44 && getCarriedItem()==274 || tile==44 && getCarriedItem()==278 || tile==44 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,44,63);
        }
        else if(tile==44 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,44,64);
        }
        if(tile==45 && getCarriedItem()==270 || tile==45 && getCarriedItem()==257 || tile==45 && getCarriedItem()==274 || tile==45 && getCarriedItem()==278 || tile==45 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,45,63);
        }
        else if(tile==45 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,45,64);
        }
        if(tile==47){
            Level.dropItem(x,y,z,0.5,340,61);
        }
        if(tile==48 && getCarriedItem()==270 || tile==48 && getCarriedItem()==257 || tile==48 && getCarriedItem()==274 || tile==48 && getCarriedItem()==278 || tile==48 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,48,63);
        }
        else if(tile==48 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,48,64);
        }
        if(tile==49 && getCarriedItem()==278 || tile==246 && getCarriedItem()==278){
            Level.dropItem(x,y,z,0.5,49,63);
        }
        else if(tile==49 && getCarriedItem()!=278 || tile==246 && getCarriedItem()!=278){
            Level.dropItem(x,y,z,0.5,49,64);
        }
        if(tile==50 || tile==53 || tile==54){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==56 && getCarriedItem()==257 || tile==57 && getCarriedItem()==257 || tile==56 && getCarriedItem()==278 || tile==57 && getCarriedItem()==278 || tile==56 && getCarriedItem()==285 || tile==57 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        else if(tile==56 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285 || tile==57 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,tile,64);
        }
        if(tile==61 && getCarriedItem()==270 || tile==61 && getCarriedItem()==257 || tile==61 && getCarriedItem()==274 || tile==61 && getCarriedItem()==278 || tile==61 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,61,63);
        }
        else if(tile==61 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,61,64);
        }
        if(tile==63 || tile==64 || tile==65 || tile==66){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==67 && getCarriedItem()==270 || tile==67 && getCarriedItem()==257 || tile==67 && getCarriedItem()==274 || tile==67 && getCarriedItem()==278 || tile==67 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,67,63);
        }
        else if(tile==67 && getCarriedItem()!=270 && getCarriedItem()!=257 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,67,64);
        }
        if(tile==73 && getCarriedItem()==257 || tile==73 && getCarriedItem()==278 || tile==73 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,331,63);
        }
        else if(tile==73 && getCarriedItem()!=257 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,331,64);
        }
        if(tile==78 && getCarriedItem()==256 || tile==78 && getCarriedItem()==269 || tile==78 && getCarriedItem()==273 || tile==78 && getCarriedItem()==277 || tile==78 && getCarriedItem()==284){
            Level.dropItem(x,y,z,0.5,332,63);
        }
        else if(tile==78 && getCarriedItem()!=256 && getCarriedItem()!=269 && getCarriedItem()!=273 && getCarriedItem()!=277 && getCarriedItem()!=284){
            Level.dropItem(x,y,z,0.5,332,64);
        }
        if(tile==80 && getCarriedItem()==256 || tile==80 && getCarriedItem()==269 || tile==80 && getCarriedItem()==273 || tile==80 && getCarriedItem()==277 || tile==80 && getCarriedItem()==284){
            Level.dropItem(x,y,z,0.5,332,60);
        }
        else if(tile==80 && getCarriedItem()!=256 && getCarriedItem()!=269 && getCarriedItem()!=273 && getCarriedItem()!=277 && getCarriedItem()!=284){
            Level.dropItem(x,y,z,0.5,332,64);
        }
        if(tile==81 || tile==82 || tile==83 || tile==85 || tile==86 || tile==89 || tile==91 || tile==96 || tile==102 || tile==107){
            Level.dropItem(x,y,z,0.5,tile,63);
        }
        if(tile==87 && getCarriedItem()==257 || tile==87 && getCarriedItem()==270 || tile==87 && getCarriedItem()==274 || tile==87 && getCarriedItem()==278 || tile==87 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,87,63);
        }
        else if(tile==87 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,87,64);
        }
        if(tile==98 && getCarriedItem()==257 || tile==98 && getCarriedItem()==270 || tile==98 && getCarriedItem()==274 || tile==98 && getCarriedItem()==278 || tile==98 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,98,63);
        }
        else if(tile==98 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,98,64);
        }
        if(tile==101 && getCarriedItem()==257 || tile==101 && getCarriedItem()==270 || tile==101 && getCarriedItem()==274 || tile==101 && getCarriedItem()==278 || tile==101 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,101,63);
        }
        else if(tile==101 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,101,64);
        }
        if(tile==103){
            Level.dropItem(x,y,z,0.5,360,57);
        }
        if(tile==108 && getCarriedItem()==257 || tile==108 && getCarriedItem()==270 || tile==108 && getCarriedItem()==274 || tile==108 && getCarriedItem()==278 || tile==108 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,108,63);
        }
        else if(tile==108 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,108,64);
        }
        if(tile==109 && getCarriedItem()==257 || tile==109 && getCarriedItem()==270 || tile==109 && getCarriedItem()==274 || tile==109 && getCarriedItem()==278 || tile==109 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,109,63);
        }
        else if(tile==109 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,109,64);
        }
        if(tile==112 && getCarriedItem()==257 || tile==112 && getCarriedItem()==270 || tile==112 && getCarriedItem()==274 || tile==112 && getCarriedItem()==278 || tile==112 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,112,63);
        }
        else if(tile==112 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,112,64);
        }
        if(tile==114 && getCarriedItem()==257 || tile==114 && getCarriedItem()==270 || tile==114 && getCarriedItem()==274 || tile==114 && getCarriedItem()==278 || tile==114 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,114,63);
        }
        else if(tile==114 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,114,64);
        }
        if(tile==128 && getCarriedItem()==257 || tile==128 && getCarriedItem()==270 || tile==128 && getCarriedItem()==274 || tile==128 && getCarriedItem()==278 || tile==128 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,128,63);
        }
        else if(tile==128 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,128,64);
        }
        if(tile==134 || tile==135 || tile==136 || tile==158 || tile==170 || tile==171 || tile==245 || tile==247){
            Level.dropItem(x,y,z,0.5,tile,63,data);
        }
        if(tile==139 && getCarriedItem()==257 || tile==139 && getCarriedItem()==270 || tile==139 && getCarriedItem()==274 || tile==139 && getCarriedItem()==278 || tile==139 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,139,63);
        }
        else if(tile==139 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,139,64);
        }
        if(tile==155 && getCarriedItem()==257 || tile==155 && getCarriedItem()==270 || tile==155 && getCarriedItem()==274 || tile==155 && getCarriedItem()==278 || tile==155 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,155,63);
        }
        else if(tile==155 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,155,64);
        }
        if(tile==156 && getCarriedItem()==257 || tile==156 && getCarriedItem()==270 || tile==156 && getCarriedItem()==274 || tile==156 && getCarriedItem()==278 || tile==156 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,156,63);
        }
        else if(tile==156 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,156,64);
        }
        if(tile==173 && getCarriedItem()==257 || tile==173 && getCarriedItem()==270 || tile==173 && getCarriedItem()==274 || tile==173 && getCarriedItem()==278 || tile==173 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,173,63);
        }
        else if(tile==173 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,173,64);
        }
        if(tile==244 && getCarriedItem()==257 || tile==244 && getCarriedItem()==270 || tile==244 && getCarriedItem()==274 || tile==244 && getCarriedItem()==278 || tile==244 && getCarriedItem()==285){
            Level.dropItem(x,y,z,0.5,457,63);
        }
        else if(tile==244 && getCarriedItem()!=257 && getCarriedItem()!=270 && getCarriedItem()!=274 && getCarriedItem()!=278 && getCarriedItem()!=285){
            Level.dropItem(x,y,z,0.5,457,64);
        }
        if(tile==250){
            Level.dropItem(x,y,z,0,247,64);
        }
    }
}

function instaDestroy(){
	for(i = 0; i < 256; i++){
		Block.setDestroyTime(i, 0.1);
	}
}
 
function defaultDestroy(){
	for(i = 0; i < 256; i++){
		Block.setDestroyTime(i, defaultDestroyTime[i]);
	}
}
